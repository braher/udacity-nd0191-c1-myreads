{"ast":null,"code":"var _jsxFileName = \"/Users/brayanhernandez/Development/udacity-nd0191-c1-myreads/nd0191-c1-myreads/starter/src/components/ListBooks.js\",\n    _s = $RefreshSig$();\n\nimport * as BooksAPI from \"../utils/BooksAPI\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BookShelf from \"../components/BookShelf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListBooks = () => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const shelves = [\"Currently Reading\", \"Want to Read\", \"Read\"];\n  const [unmounted, setUnmounted] = useState(false);\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    let unmounted = false;\n\n    if (!unmounted) {\n      getBooks();\n    }\n\n    return () => {\n      unmounted = true;\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MyReads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-content\",\n      children: books.length > 0 && shelves.map(shelf => /*#__PURE__*/_jsxDEV(BookShelf, {\n        title: shelf,\n        books: books\n      }, shelf, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"open-search\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/search\",\n        children: \"Add a book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ListBooks, \"k2Lxzy2Bb/GmRkpf4TQ6ZILgtgI=\");\n\n_c = ListBooks;\nexport default ListBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBooks\");","map":{"version":3,"sources":["/Users/brayanhernandez/Development/udacity-nd0191-c1-myreads/nd0191-c1-myreads/starter/src/components/ListBooks.js"],"names":["BooksAPI","useState","useEffect","Link","BookShelf","ListBooks","books","setBooks","shelves","unmounted","setUnmounted","getBooks","res","getAll","length","map","shelf"],"mappings":";;;AAAA,OAAO,KAAKA,QAAZ,MAA0B,mBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,OAAO,GAAG,CAAC,mBAAD,EAAsB,cAAtB,EAAsC,MAAtC,CAAhB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,QAAQ,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMZ,QAAQ,CAACa,MAAT,EAAlB;AACAN,MAAAA,QAAQ,CAACK,GAAD,CAAR;AACA,KAHD;;AAIA,QAAIH,SAAS,GAAG,KAAhB;;AACA,QAAI,CAACA,SAAL,EAAgB;AACfE,MAAAA,QAAQ;AACR;;AACD,WAAO,MAAM;AACZF,MAAAA,SAAS,GAAG,IAAZ;AACA,KAFD;AAGA,GAZQ,CAAT;AAaA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACEH,KAAK,CAACQ,MAAN,GAAe,CAAf,IACAN,OAAO,CAACO,GAAR,CAAaC,KAAD,iBACX,QAAC,SAAD;AAAuB,QAAA,KAAK,EAAEA,KAA9B;AAAqC,QAAA,KAAK,EAAEV;AAA5C,SAAgBU,KAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AAFF;AAAA;AAAA;AAAA;AAAA,YAJD,eAUC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CAlCD;;GAAMX,S;;KAAAA,S;AAmCN,eAAeA,SAAf","sourcesContent":["import * as BooksAPI from \"../utils/BooksAPI\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BookShelf from \"../components/BookShelf\";\n\nconst ListBooks = () => {\n\tconst [books, setBooks] = useState([]);\n\tconst shelves = [\"Currently Reading\", \"Want to Read\", \"Read\"];\n\tconst [unmounted, setUnmounted] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst getBooks = async () => {\n\t\t\tconst res = await BooksAPI.getAll();\n\t\t\tsetBooks(res);\n\t\t};\n\t\tlet unmounted = false;\n\t\tif (!unmounted) {\n\t\t\tgetBooks();\n\t\t}\n\t\treturn () => {\n\t\t\tunmounted = true;\n\t\t};\n\t});\n\treturn (\n\t\t<div className=\"list-books\">\n\t\t\t<div className=\"list-books-title\">\n\t\t\t\t<h1>MyReads</h1>\n\t\t\t</div>\n\t\t\t<div className=\"list-books-content\">\n\t\t\t\t{books.length > 0 &&\n\t\t\t\t\tshelves.map((shelf) => (\n\t\t\t\t\t\t<BookShelf key={shelf} title={shelf} books={books} />\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"open-search\">\n\t\t\t\t<Link to=\"/search\">Add a book</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default ListBooks;\n"]},"metadata":{},"sourceType":"module"}