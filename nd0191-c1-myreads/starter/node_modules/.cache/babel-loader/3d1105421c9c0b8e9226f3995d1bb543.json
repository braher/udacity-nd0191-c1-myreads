{"ast":null,"code":"var _jsxFileName = \"/Users/brayanhernandez/Development/udacity-nd0191-c1-myreads/nd0191-c1-myreads/starter/src/components/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport * as BooksAPI from \"../utils/BooksAPI\";\nimport SearchBooksResults from \"./SearchBooksResults\";\nimport SearchBooksBar from \"./SearchBooksBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = ({\n  onUpdateBook\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  const maxResults = \"10\"; // const searchBooks = async (query) => {\n  // \treturn res;\n  // };\n\n  const handleSearch = async query => {\n    setQuery(query); //const res = await searchBooks(query);\n    //const res = await BooksAPI.search(query, maxResults);\n    //const res = await BooksAPI.get(\"nggnmAEACAAJ\");\n    //const res = await BooksAPI.getAll();\n\n    const res = await BooksAPI.getAll();\n    const newRes = [...searchedBooks, res];\n    setSearchedBooks(newRes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBooksBar, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchBooksResults, {\n      searchedBooks: searchedBooks,\n      onUpdateBook: onUpdateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SearchBooks, \"U55ZHB1UIm7kbhx0QdqyOyf94Og=\");\n\n_c = SearchBooks;\nSearchBooks.propTypes = {\n  onUpdateBook: PropTypes.func.isRequired\n};\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["/Users/brayanhernandez/Development/udacity-nd0191-c1-myreads/nd0191-c1-myreads/starter/src/components/SearchBooks.js"],"names":["PropTypes","useState","BooksAPI","SearchBooksResults","SearchBooksBar","SearchBooks","onUpdateBook","query","setQuery","searchedBooks","setSearchedBooks","maxResults","handleSearch","res","getAll","newRes","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMU,UAAU,GAAG,IAAnB,CAHyC,CAKzC;AACA;AACA;;AAEA,QAAMC,YAAY,GAAG,MAAOL,KAAP,IAAiB;AACrCC,IAAAA,QAAQ,CAACD,KAAD,CAAR,CADqC,CAErC;AACA;AACA;AACA;;AACA,UAAMM,GAAG,GAAG,MAAMX,QAAQ,CAACY,MAAT,EAAlB;AACA,UAAMC,MAAM,GAAG,CAAC,GAAGN,aAAJ,EAAmBI,GAAnB,CAAf;AACAH,IAAAA,gBAAgB,CAACK,MAAD,CAAhB;AACA,GATD;;AAWA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACC,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,kBAAD;AACC,MAAA,aAAa,EAAEH,aADhB;AAEC,MAAA,YAAY,EAAEH;AAFf;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CA7BD;;GAAMD,W;;KAAAA,W;AA8BNA,WAAW,CAACW,SAAZ,GAAwB;AACvBV,EAAAA,YAAY,EAAEN,SAAS,CAACiB,IAAV,CAAeC;AADN,CAAxB;AAGA,eAAeb,WAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport * as BooksAPI from \"../utils/BooksAPI\";\nimport SearchBooksResults from \"./SearchBooksResults\";\nimport SearchBooksBar from \"./SearchBooksBar\";\n\nconst SearchBooks = ({ onUpdateBook }) => {\n\tconst [query, setQuery] = useState(\"\");\n\tconst [searchedBooks, setSearchedBooks] = useState([]);\n\tconst maxResults = \"10\";\n\n\t// const searchBooks = async (query) => {\n\t// \treturn res;\n\t// };\n\n\tconst handleSearch = async (query) => {\n\t\tsetQuery(query);\n\t\t//const res = await searchBooks(query);\n\t\t//const res = await BooksAPI.search(query, maxResults);\n\t\t//const res = await BooksAPI.get(\"nggnmAEACAAJ\");\n\t\t//const res = await BooksAPI.getAll();\n\t\tconst res = await BooksAPI.getAll();\n\t\tconst newRes = [...searchedBooks, res];\n\t\tsetSearchedBooks(newRes);\n\t};\n\n\treturn (\n\t\t<div className=\"search-books\">\n\t\t\t<SearchBooksBar handleSearch={handleSearch} />\n\t\t\t<SearchBooksResults\n\t\t\t\tsearchedBooks={searchedBooks}\n\t\t\t\tonUpdateBook={onUpdateBook}\n\t\t\t/>\n\t\t</div>\n\t);\n};\nSearchBooks.propTypes = {\n\tonUpdateBook: PropTypes.func.isRequired,\n};\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}